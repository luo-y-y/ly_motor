<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.cat.sy.dao.SyRoleUserDao">
   <resultMap type="com.cat.sy.bean.SyRoleUser" id="syRoleUserMap">
	    <id property="id" column="ID" />
      <result property="uuid" column="UUID"/>
      <result property="roleId" column="ROLE_ID"/>
      <result property="userId" column="USER_ID"/>
      <result property="createUserId" column="CREATE_USER_ID"/>
      <result property="status" column="STATUS"/>
      <result property="createTime" column="CREATE_TIME"/>
      <result property="note" column="NOTE"/>
   </resultMap>
	
<!--***********************define end*************************-->
   <insert id="save" parameterType="hashMap">
     <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
       <![CDATA[SELECT LAST_INSERT_ID() AS id ]]>
      </selectKey>
      INSERT INTO sy_role_user(ID,UUID,ROLE_ID,USER_ID,CREATE_USER_ID,STATUS,CREATE_TIME,NOTE)
      VALUES(#{id},#{uuid,jdbcType=VARCHAR},#{roleId,jdbcType=NUMERIC},#{userId,jdbcType=NUMERIC},#{createUserId,jdbcType=NUMERIC},#{status,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{note,jdbcType=VARCHAR})
   </insert>

   <delete id="delete" parameterType="hashMap">
      DELETE FROM sy_role_user WHERE id = #{id}
   </delete>


   <update id="update" parameterType="hashMap">
      UPDATE sy_role_user SET  ROLE_ID=#{roleId,jdbcType=NUMERIC},USER_ID=#{userId,jdbcType=NUMERIC},STATUS=#{status,jdbcType=VARCHAR},NOTE=#{note,jdbcType=VARCHAR}
      WHERE id = #{id}
   </update>
   

   <select id="load" resultMap="syRoleUserMap" parameterType="hashMap">
      select * from sy_role_user where id = #{id}
   </select>
   
   
   <select id="findList" resultMap="syRoleUserMap" parameterType="hashMap">
     select * from sy_role_user 
     where 1=1 
      <if test="userId != null and userId !=''">
	         AND USER_ID = #{userId}
	   </if>
	   <if test="roleId != null and roleId !=''">
	         AND ROLE_ID = #{roleId}
	   </if>
   </select>

 
   <sql id="page_where_sql">
	      where 1=1
	      <if test="userId != null and userId !=''">
	         AND t.USER_ID = #{userId}
	      </if>
	      <if test="roleId != null and roleId !=''">
	         AND t.ROLE_ID = #{roleId}
	      </if>
	      order by CREATE_TIME DESC
   </sql>
   
  <!--  <select id="findPageList" resultMap="syRoleUserMap" parameterType="hashMap">
    <![CDATA[ 
     SELECT * FROM (
     		SELECT tt.*, ROWNUM AS rowno FROM (  
     				SELECT t.* FROM sy_role_user t    ]]> <include refid="page_where_sql" />  <![CDATA[ 
     				) tt  WHERE ROWNUM <= #{oracleEnd})
     		ttt  WHERE ttt.rowno >= #{oracleStart}
         ]]>
   </select> -->
   
   <select id="findPageList" resultMap="syRoleUserMap" parameterType="hashMap">
      select * from sy_role_user t 
      <include refid="page_where_sql" />  
      <if test="mysqlStart != null">
            limit #{mysqlStart}, #{max}
      </if>
   </select>
   
   <select id="findPageList_get_row_count" resultType="Integer">
      SELECT count(t.id) FROM sy_role_user t
      <include refid="page_where_sql" />
   </select>

</mapper>
